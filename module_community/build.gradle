Properties localProperties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream();
localProperties.load(inputStream)
def isModuleDevelop = localProperties.getProperty("isModuleDevelop", "false")
if (isModuleDevelop.toBoolean()) {
    //组件化编译时为application
    apply plugin: 'com.android.application'
    apply plugin: 'com.jakewharton.butterknife'
} else {
    //非组件化编译时为library
    apply plugin: 'com.android.library'
    apply plugin: 'com.jakewharton.butterknife'
}
android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        if (isModuleDevelop.toBoolean()) {
            //组件化编译时为app，设置 Application Id
            applicationId "com.ralf.preciouspet"
        }
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            if (isModuleDevelop.toBoolean()) {
                //组件化编译时为app，在对应的AndroidManifest文件中需要写ndroid.intent.action.MAIN入口Activity
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                // 集成开发模式下排除debug文件夹中的所有Java文件
                java {
                    //debug文件夹中放的是Application类，非组件化时不用有此类
                    exclude 'debug/**'
                }
            }
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':pet_provider')
    implementation project(':module_emoji')
    annotationProcessor rootProject.ext.dependencies["arouter-compiler"]
    annotationProcessor rootProject.ext.dependencies["butterknife-compiler"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]

    implementation 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    implementation 'com.youth.banner:banner:1.4.10'
    // tab
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'

    // player
    implementation 'com.shuyu:gsyVideoPlayer-java:6.0.3'
    // ijk模式的so
    implementation 'com.shuyu:gsyVideoPlayer-armv7a:6.0.3'
    implementation 'com.shuyu:gsyVideoPlayer-arm64:6.0.3'

    //test
    implementation rootProject.ext.dependencies["junit"]
    androidTestApi(rootProject.ext.dependencies["espresso-core"]) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestApi(rootProject.ext.dependencies["runner"]) {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}
